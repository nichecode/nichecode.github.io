[{"content":"Who I Am #I\u0026rsquo;m a strategic engineering leader passionate about building high-performance technical platforms and empowering engineering teams. My journey spans multiple domains, driven by a commitment to innovation and technical excellence.\nProfessional Lens #With over two decades of experience, I specialise in:\nCloud-native architectures across major cloud providers Distributed systems and microservices design Engineering leadership and team transformation Multi-cloud platform engineering\nTechnical Philosophy # I believe in building systems that are not just functional, but are also maintainable, scalable, and a joy to work with. Areas of Expertise #My technical toolkit includes:\nLanguages: Golang, C#, Python Cloud Platforms: AWS, GCP, Azure Technologies: Kubernetes, Terraform, Microservices Methodologies: Domain-Driven Design, GitOps, Event-Driven Architecture Professional Interests # Distributed Systems Cloud-Native Technologies Artificial Intelligence System Reliability Engineering FinOps and Cost Optimisation Beyond the Code #When I\u0026rsquo;m not architecting systems or leading teams, I\u0026rsquo;m exploring:\nEmerging technology trends Cloud-native innovations The intersection of technology and strategic leadership Let\u0026rsquo;s Connect #This blog is my space to share insights, challenges, and learnings from my journey in technology leadership. Whether you\u0026rsquo;re a fellow engineer, a technology enthusiast, or simply curious about modern software engineering, I hope you\u0026rsquo;ll find something valuable here.\nFeel free to reach out and connect.\nConnect With Me # GitHub LinkedIn Twitter\n","date":"9 April 2025","permalink":"/about/","section":"Nicholas Hammond","summary":"\u003ch2 id=\"who-i-am\" class=\"relative group\"\u003eWho I Am \u003cspan class=\"absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100\"\u003e\u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\" style=\"text-decoration-line: none !important;\" href=\"#who-i-am\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/h2\u003e\u003cp\u003eI\u0026rsquo;m a strategic engineering leader passionate about building high-performance technical platforms and empowering engineering teams. My journey spans multiple domains, driven by a commitment to innovation and technical excellence.\u003c/p\u003e\n\u003ch2 id=\"professional-lens\" class=\"relative group\"\u003eProfessional Lens \u003cspan class=\"absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100\"\u003e\u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\" style=\"text-decoration-line: none !important;\" href=\"#professional-lens\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/h2\u003e\u003cp\u003eWith over two decades of experience, I specialise in:\u003c/p\u003e\n\u003cp\u003e\n\n  \u003cspan class=\"icon relative inline-block align-text-bottom\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\n  \u003cpath d=\"M352 256c0 22.2-1.2 43.6-3.3 64H163.3c-2.2-20.4-3.3-41.8-3.3-64s1.2-43.6 3.3-64H348.7c2.2 20.4 3.3 41.8 3.3 64zm28.8-64H503.9c5.3 20.5 8.1 41.9 8.1 64s-2.8 43.5-8.1 64H380.8c2.1-20.6 3.2-42 3.2-64s-1.1-43.4-3.2-64zm112.6-32H376.7c-10-63.9-29.8-117.4-55.3-151.6c78.3 20.7 142 77.5 171.9 151.6zm-149.1 0H167.7c6.1-36.4 15.5-68.6 27-94.7c10.5-23.6 22.2-40.7 33.5-51.5C239.4 3.2 248.7 0 256 0s16.6 3.2 27.8 13.8c11.3 10.8 23 27.9 33.5 51.5c11.6 26 20.9 58.2 27 94.7zm-209 0H18.6C48.6 85.9 112.2 29.1 190.6 8.4C165.1 42.6 145.3 96.1 135.3 160zM8.1 192C2.8 212.5 0 233.9 0 256s2.8 43.5 8.1 64H131.2c-2.1-20.6-3.2-42-3.2-64s1.1-43.4 3.2-64H8.1zM194.7 446.6c-11.6-26-20.9-58.2-27-94.6H344.3c-6.1 36.4-15.5 68.6-27 94.6c-10.5 23.6-22.2 40.7-33.5 51.5C272.6 508.8 263.3 512 256 512s-16.6-3.2-27.8-13.8c-11.3-10.8-23-27.9-33.5-51.5zM135.3 352c10 63.9 29.8 117.4 55.3 151.6C112.2 482.9 48.6 426.1 18.6 352H135.3zm358.1 0c-30 74.1-93.6 130.9-171.9 151.6c25.5-34.2 45.2-87.7 55.3-151.6H493.4z\"/\u003e\n\u003c/svg\u003e \n  \u003c/span\u003e\n\n Cloud-native architectures across major cloud providers\n\n\n  \u003cspan class=\"icon relative inline-block align-text-bottom\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"\u003e\n  \u003cpath d=\"M16 64C16 28.7 44.7 0 80 0H304c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H80c-35.3 0-64-28.7-64-64V64zM224 448a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM304 64H80V384H304V64z\"/\u003e\n\u003c/svg\u003e \n  \u003c/span\u003e\n\n Distributed systems and microservices design\n\n\n  \u003cspan class=\"icon relative inline-block align-text-bottom\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"\u003e\n  \u003cpath d=\"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64S32 124.7 32 160s28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64s-64 28.7-64 64s28.7 64 64 64zm-32 32h-64c-17.6 0-33.8 5.8-46.8 15.4c-20.6-15.2-47.2-24.2-76.2-24.2c-29 0-55.6 9-76.2 24.2c-13-9.6-29.2-15.4-46.8-15.4h-64c-35.3 0-64 20.7-64 48v32c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32v-32c0-27.3-28.7-48-64-48zm-256 0c-35.3 0-64-28.7-64-64s28.7-64 64-64s64 28.7 64 64s-28.7 64-64 64zm96 96H192c-17.7 0-32 14.3-32 32v32c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32v-32c0-17.7-14.3-32-32-32z\"/\u003e\n\u003c/svg\u003e \n  \u003c/span\u003e\n\n Engineering leadership and team transformation\n\n\n  \u003cspan class=\"icon relative inline-block align-text-bottom\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"\u003e\n  \u003cpath d=\"M278.9 511.5l-61-17.7c-6.5-1.8-10.1-8.6-8.3-15.1l21.7-82c-46.1-40.4-75-96.6-75-158.7C136 99.7 176.7 59 228 59c46.1 0 84.8 30.7 97.1 72.8c12.3-42.1 51-72.8 97.1-72.8c51.3 0 92 40.7 92 91c0 62.1-28.9 118.3-75 158.7l21.7 82c1.8 6.5-1.8 13.3-8.3 15.1l-61 17.7c-5.2 1.5-10.9-.5-13.5-4.9l-38.4-64.7c-3.7-6.2-12.6-6.2-16.3 0l-38.4 64.7c-2.6 4.4-8.3 6.4-13.5 4.9zM228 119c-30.9 0-56 25.1-56 56c0 30.9 25.1 56 56 56s56-25.1 56-56c0-30.9-25.1-56-56-56zm184 56c0-30.9-25.1-56-56-56s-56 25.1-56 56c0 30.9 25.1 56 56 56s56-25.1 56-56z\"/\u003e\n\u003c/svg\u003e \n  \u003c/span\u003e\n\n Multi-cloud platform engineering\u003c/p\u003e","title":"About"},{"content":"","date":null,"permalink":"/tags/best-practices/","section":"Tags","summary":"","title":"Best Practices"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/development/","section":"Tags","summary":"","title":"Development"},{"content":"","date":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git"},{"content":"","date":null,"permalink":"/","section":"Nicholas Hammond","summary":"","title":"Nicholas Hammond"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/categories/software-development/","section":"Categories","summary":"","title":"Software Development"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" This article explores the importance of meaningful commit messages and provides practical guidelines for writing them effectively. Why Commit Messages Matter #Have you ever looked back at your Git history and wondered, \u0026ldquo;What on earth was I thinking when I made this change?\u0026rdquo; If so, you\u0026rsquo;re not alone. As developers, we\u0026rsquo;ve all been guilty of commit messages like \u0026ldquo;fix stuff\u0026rdquo; or \u0026ldquo;update code\u0026rdquo; at some point. These vague messages might seem harmless in the moment, but they create significant pain down the road.\nGood commit messages aren\u0026rsquo;t just a nicetyâ€”they\u0026rsquo;re a crucial form of documentation that serves multiple purposes:\nFuture-proofing your understanding: You might understand your changes today, but will you six months from now? Team communication: Clear messages help team members understand your intentions without having to ask. Debugging aid: When tracking down issues, meaningful commit messages can significantly speed up the process. Project history: They create a readable narrative of your project\u0026rsquo;s evolution. Examples of vague and clear commit messages Conventional Commits: A Structured Approach #One of the most effective approaches to commit messages is the Conventional Commits format. This specification provides a lightweight convention that creates a standardized and meaningful commit history.\nThe basic structure looks like this:\n\u0026lt;type\u0026gt;[optional scope]: \u0026lt;description\u0026gt; [optional body] [optional footer(s)] Common Types # feat: - A new feature for the user fix: - A bug fix docs: - Documentation only changes style: - Changes that don\u0026rsquo;t affect the meaning of the code (white-space, formatting, etc.) refactor: - Code change that neither fixes a bug nor adds a feature test: - Adding missing tests or correcting existing tests chore: - Changes to the build process or auxiliary tools and libraries Real-World Examples #Bad commit message:\ngit commit -m \u0026#34;fixed bug\u0026#34; Good commit message:\ngit commit -m \u0026#34;fix: prevent racing condition in user authentication flow\u0026#34; Even better with more details:\ngit commit -m \u0026#34;fix(auth): prevent racing condition in user authentication flow When multiple login attempts were made simultaneously from the same account, tokens could be incorrectly validated. This adds request locking to ensure consistent authentication state. Fixes #423\u0026#34; Beyond the Prefix: Writing the Content #While the prefix helps categorize the commit, the content of your message is where the real value lies. Here are some guidelines:\nBe specific but concise: Aim for a 50-72 character summary line. Use the imperative mood: Write as if you\u0026rsquo;re giving a command (e.g., \u0026ldquo;fix\u0026rdquo; not \u0026ldquo;fixed\u0026rdquo;). Explain the \u0026lsquo;why\u0026rsquo; not just the \u0026lsquo;what\u0026rsquo;: The code shows what changed; your message should explain why. Reference relevant issues: Include ticket numbers or issue IDs when applicable. Making It a Habit #Like any good practice, writing meaningful commit messages takes discipline. It might feel like extra work at first, but it quickly becomes second nature and pays dividends in the long run.\nConsider using tools like commitizen to help enforce this pattern, or set up Git hooks to validate commit message formats.\nConclusion #Your commit history is a first-class form of project documentation. Investing a few extra seconds to write clear, meaningful commit messages will save you and your teammates hours of confusion and detective work later.\nNext time you\u0026rsquo;re about to commit with a message like \u0026ldquo;updates\u0026rdquo; or \u0026ldquo;fixes,\u0026rdquo; take a moment to think about the developer (possibly future you) who will need to understand these changes later. Your future self will thank you.\n","date":"9 April 2025","permalink":"/posts/the-art-of-commit-messages/","section":"Posts","summary":"\u003cdiv class=\"flex rounded-md bg-primary-100 px-4 py-3 dark:bg-primary-900\"\u003e\n  \u003cspan class=\"pe-3 text-primary-400\"\u003e\n    \u003cspan class=\"icon relative inline-block px-1 align-text-bottom\"\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\u003e\u003cpath fill=\"currentColor\" d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/\u003e\u003c/svg\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n  \u003cspan class=\"dark:text-neutral-300\"\u003eThis article explores the importance of meaningful commit messages and provides practical guidelines for writing them effectively.\u003c/span\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"why-commit-messages-matter\" class=\"relative group\"\u003eWhy Commit Messages Matter \u003cspan class=\"absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100\"\u003e\u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\" style=\"text-decoration-line: none !important;\" href=\"#why-commit-messages-matter\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/h2\u003e\u003cp\u003eHave you ever looked back at your Git history and wondered, \u0026ldquo;What on earth was I thinking when I made this change?\u0026rdquo; If so, you\u0026rsquo;re not alone. As developers, we\u0026rsquo;ve all been guilty of commit messages like \u0026ldquo;fix stuff\u0026rdquo; or \u0026ldquo;update code\u0026rdquo; at some point. These vague messages might seem harmless in the moment, but they create significant pain down the road.\u003c/p\u003e","title":"The Art of Meaningful Commit Messages"},{"content":"","date":"1 January 0001","permalink":"/archives/","section":"Nicholas Hammond","summary":"archives","title":"Archives"},{"content":"","date":"1 January 0001","permalink":"/search/","section":"Nicholas Hammond","summary":"search","title":"Search"}]